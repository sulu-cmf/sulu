name: Test application

on:
    pull_request:
    push:
        branches:
            - '[0-9]+.x'
            - '[0-9]+.[0-9]+'

jobs:
    validate-js-build:
        name: Validate JavaScript builds
        runs-on: ubuntu-latest
        steps:
            - name: Checkout project
              uses: actions/checkout@v2

            - name: Install and configure Node
              uses: actions/setup-node@v2-beta
              with:
                  node-version: '12'

            - name: Install packages
              run: |
                  sudo apt-get update
                  sudo apt-get install ruby ruby-all-dev
                  sudo gem update --system
                  sudo gem install compass

            - name: Build JavaScript
              run: bin/build-bundles.sh

            - name: Validate builds
              run: bin/ci/validate-build-bundles.sh

    test:
        name: "PHP ${{ matrix.php-version }} (${{ matrix.database }}, ${{ matrix.phpcr-transport }}, ${{ matrix.dependency-versions }})"
        runs-on: ubuntu-latest

        env:
            JACKRABBIT_VERSION: 2.20.2
            SYMFONY_DEPRECATIONS_HELPER: weak
            SYMFONY__DATABASE__HOST: 127.0.0.1

        strategy:
            fail-fast: false
            matrix:
                include:
                    - php-version: '5.5'
                      database: mysql
                      phpcr-transport: doctrinedbal
                      dependency-versions: 'highest'
                      test-flags: ''
                      php-extensions: 'ctype, iconv, mysql, gd'
                      tools: 'composer:v1'
                      php-cs-fixer: false
                      env:
                          SYMFONY__PHPCR__TRANSPORT: doctrinedbal
                          SYMFONY__DATABASE__DRIVER: pdo_mysql
                          SYMFONY__DATABASE__VERSION: 5.7
                          SYMFONY__DATABASE__PORT: 3306

                    - php-version: '7.0'
                      database: mysql
                      phpcr-transport: doctrinedbal
                      dependency-versions: 'lowest'
                      test-flags: ''
                      php-extensions: 'ctype, iconv, mysql, gd'
                      tools: 'composer:v2'
                      php-cs-fixer: false
                      env:
                          SYMFONY__PHPCR__TRANSPORT: doctrinedbal
                          SYMFONY__DATABASE__DRIVER: pdo_mysql
                          SYMFONY__DATABASE__VERSION: 5.7
                          SYMFONY__DATABASE__PORT: 3306

                    - php-version: '7.4'
                      database: postgres
                      phpcr-transport: jackrabbit
                      dependency-versions: 'highest'
                      test-flags: '--jackrabbit-restart' # restart jackrabbit after each suite see: https://github.com/sulu-io/sulu/issues/2137
                      php-extensions: 'ctype, iconv, mysql, imagick'
                      tools: 'composer:v2'
                      php-cs-fixer: true
                      env:
                          SYMFONY__PHPCR__TRANSPORT: jackrabbit
                          SYMFONY__DATABASE__DRIVER: pdo_pgsql
                          SYMFONY__DATABASE__VERSION: 12.5
                          SYMFONY__DATABASE__PORT: 5432
                          SYMFONY__DATABASE__USER: postgres
                          SYMFONY__DATABASE__PASSWORD: postgres

        services:
            mysql:
                image: mysql:5.7
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: yes
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

            postgres:
                image: postgres:12.5
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        steps:
            - name: Checkout project
              uses: actions/checkout@v2

            - name: Install and configure PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  extensions: ${{ matrix.php-extensions }}
                  tools: ${{ matrix.tools }}
                  coverage: none

            - name: Cache jackrabbit runnable
              uses: actions/cache@v2
              id: jackrabbit-cache
              if: ${{ matrix.phpcr-transport == 'jackrabbit' }}
              with:
                  path: downloads
                  key: ${{ runner.os }}-jackrabbit-${{ env.JACKRABBIT_VERSION }}

            - name: Download jackrabbit
              if: ${{ matrix.phpcr-transport == 'jackrabbit' && steps.jackrabbit-cache.outputs.cache-hit != 'true' }}
              run: |
                  mkdir downloads
                  cd downloads
                  wget http://archive.apache.org/dist/jackrabbit/${{ env.JACKRABBIT_VERSION }}/jackrabbit-standalone-${{ env.JACKRABBIT_VERSION }}.jar
                  cd -

            - name: Run jackrabbit
              if: ${{ matrix.phpcr-transport == 'jackrabbit' }}
              run: java -jar downloads/jackrabbit-standalone-${{ env.JACKRABBIT_VERSION }}.jar > /dev/null &

            - name: Require jackrabbit dependencies
              if: ${{ matrix.phpcr-transport == 'jackrabbit' }}
              run: |
                  composer remove jackalope/jackalope-doctrine-dbal --dev --no-interaction --no-update
                  composer require jackalope/jackalope-jackrabbit:~1.2  --no-interaction --no-update

            - name: Install composer dependencies
              uses: ramsey/composer-install@v1
              with:
                  dependency-versions: ${{matrix.dependency-versions}}

            - name: Run php-cs-fixer
              if: ${{ matrix.php-cs-fixer }}
              run: |
                  composer global require friendsofphp/php-cs-fixer --prefer-dist --no-interaction
                  GLOBAL_BIN_DIR=$(composer global config bin-dir --absolute --quiet)
                  $GLOBAL_BIN_DIR/php-cs-fixer fix --dry-run --diff

            - name: Run tests
              run: time ./bin/runtests -i -a ${{ matrix.test-flags }}
              env: ${{ matrix.env }}

    test-windows:
        name: "PHP ${{ matrix.php-version }} on Windows (${{ matrix.phpcr-transport }}, ${{ matrix.dependency-versions }})"
        runs-on: windows-latest

        env:
            JACKRABBIT_VERSION: 2.20.2
            SYMFONY_DEPRECATIONS_HELPER: weak
            SYMFONY__PHPCR__TRANSPORT: jackrabbit
            SYMFONY__DATABASE__DRIVER: pdo_mysql
            SYMFONY__DATABASE__VERSION: 5.7
            SYMFONY__DATABASE__HOST: 127.0.0.1
            SYMFONY__DATABASE__PORT: 3306
            SYMFONY__DATABASE__USER: root
            SYMFONY__DATABASE__PASSWORD: root

        strategy:
            fail-fast: false
            matrix:
                include:
                    - php-version: '7.2'
                      phpcr-transport: jackrabbit
                      dependency-versions: 'highest'
                      test-flags: '--jackrabbit-restart' # restart jackrabbit after each suite see: https://github.com/sulu-io/sulu/issues/2137
                      php-extensions: 'ctype, iconv, mysql, pdo_mysql, php_fileinfo, imagick'
                      tools: 'composer'

        steps:
            - name: Checkout project
              uses: actions/checkout@v2

            - name: Install and configure PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  extensions: ${{ matrix.php-extensions }}
                  tools: ${{ matrix.tools }}
                  ini-values: 'memory_limit=-1'

            - name: Install and configure MySQL
              uses: shogo82148/actions-setup-mysql@v1.0.1
              with:
                  mysql-version: '5.7'
                  root-password: 'root'

            - name: Cache jackrabbit runnable
              uses: actions/cache@v2
              id: jackrabbit-cache
              if: ${{ matrix.phpcr-transport == 'jackrabbit' }}
              with:
                  path: downloads
                  key: ${{ runner.os }}-jackrabbit-${{ env.JACKRABBIT_VERSION }}

            - name: Download jackrabbit
              if: ${{ matrix.phpcr-transport == 'jackrabbit' && steps.jackrabbit-cache.outputs.cache-hit != 'true' }}
              run: |
                  mkdir downloads
                  cd downloads
                  curl -O http://archive.apache.org/dist/jackrabbit/${{ env.JACKRABBIT_VERSION }}/jackrabbit-standalone-${{ env.JACKRABBIT_VERSION }}.jar
                  cd -

            - name: Run jackrabbit
              if: ${{ matrix.phpcr-transport == 'jackrabbit' }}
              run: powershell -command "Start-Process -FilePath java -ArgumentList '-jar downloads/jackrabbit-standalone-${{ env.JACKRABBIT_VERSION }}.jar'"

            - name: Require jackrabbit dependencies
              if: ${{ matrix.phpcr-transport == 'jackrabbit' }}
              run: |
                  composer remove jackalope/jackalope-doctrine-dbal --dev --no-interaction --no-update
                  composer require jackalope/jackalope-jackrabbit:~1.2  --no-interaction --no-update

            - name: Install composer dependencies
              uses: ramsey/composer-install@v1
              with:
                  dependency-versions: ${{ matrix.dependency-versions }}

            - name: Run tests
              run: php bin/runtests -i -a ${{ matrix.test-flags }}
