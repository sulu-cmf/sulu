define(["websocket/abstract","websocket/fallback","websocket/client","jquery"],function(a,b,c,d){var e=function(b,c,e){a.call(this,b),this.websocketUrl=c,this.tryWebsocket=e,this.initialized=d.Deferred(),this.websocket=d.Deferred()},f=function(){var a="MozWebSocket"in window?"MozWebSocket":"WebSocket"in window?"WebSocket":null;return null===a?(this.sandbox.logger.log("Your browser doesn't support Websockets."),!1):(window.MozWebSocket&&(window.WebSocket=window.MozWebSocket),!0)};return e.prototype=Object.create(a.prototype),e.prototype.connect=function(){this.tryWebsocket&&f()?(this.websocket.fail(function(){this.connectFallback()}.bind(this)),this.connectWebsocket()):this.connectFallback()},e.prototype.connectWebsocket=function(){this.socket=new WebSocket(this.websocketUrl),this.client=new c(this.app,this.socket,this.id),this.client.onMessage(function(a){this._onMessage.notify(a)}.bind(this)),this.socket.onopen=function(){this.initialized.resolve()}.bind(this),this.socket.onerror=function(){this.websocket.reject()}.bind(this),this.socket.onclose=function(){this.websocket.reject()}.bind(this)},e.prototype.connectFallback=function(){this.client=new b(this.app,this.id),this.initialized.resolve(),this.client.onMessage(function(a){this._onMessage.notify(a)}.bind(this))},e.prototype.getType=function(){return this.client.getType()},e.prototype.addHandler=function(a,b){this.client.addHandler(a,b)},e.prototype.doSend=function(a,b){var c=d.Deferred();return this.initialized.then(function(){this.client.doSend(a,b).then(function(a,b){c.resolve(a,b)}.bind(this)).fail(function(a,b){c.reject(a,b)}.bind(this))}.bind(this)),c.promise()},e});