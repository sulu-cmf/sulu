<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="sulu_contact.country.entity">SuluContactBundle:Country</parameter>
        <parameter key="sulu_contact.contact_title.entity">SuluContactBundle:ContactTitle</parameter>
    </parameters>
    <services>
        <service id="sulu_contact.admin" class="Sulu\Bundle\ContactBundle\Admin\ContactAdmin">
            <argument type="service" id="Sulu\Bundle\AdminBundle\Admin\Routing\RouteBuilderFactoryInterface"/>
            <argument type="service" id="sulu_security.security_checker" />

            <tag name="sulu.admin"/>
            <tag name="sulu.context" context="admin"/>
        </service>
        <service id="sulu_contact.contact_title_repository" class="Sulu\Bundle\ContactBundle\Entity\ContactTitleRepository">
            <factory method="getRepository" service="doctrine"/>
            <argument>%sulu_contact.contact_title.entity%</argument>
        </service>
        <service id="sulu_contact.country_repository" class="Sulu\Component\Persistence\Repository\ORM\EntityRepository">
            <factory service="doctrine" method="getRepository"/>
            <argument>%sulu_contact.country.entity%</argument>
        </service>
        <service id="sulu_contact.account_listener" class="Sulu\Bundle\ContactBundle\EventListener\AccountListener">
            <tag name="doctrine.event_listener" event="postPersist"/>
        </service>
        <service id="sulu_contact.account_manager" class="Sulu\Bundle\ContactBundle\Contact\AccountManager" public="true">
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <argument type="service" id="sulu_tag.tag_manager"/>
            <argument type="service" id="sulu_media.media_manager"/>
            <argument type="service" id="sulu_contact.account_factory"/>
            <argument type="service" id="sulu.repository.account"/>
            <argument type="service" id="sulu.repository.contact"/>
            <argument type="service" id="sulu.repository.media" />
            <argument type="string">%sulu.model.account.class%</argument>
        </service>
        <service id="sulu_contact.contact_manager" class="Sulu\Bundle\ContactBundle\Contact\ContactManager" public="true">
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <argument type="service" id="sulu_tag.tag_manager"/>
            <argument type="service" id="sulu_media.media_manager"/>
            <argument type="service" id="sulu.repository.account"/>
            <argument type="service" id="sulu_contact.contact_title_repository"/>
            <argument type="service" id="sulu.repository.contact"/>
            <argument type="service" id="sulu.repository.media" />
            <argument type="string">%sulu.model.account.class%</argument>
        </service>
        <service id="sulu_contact.customer_manager" class="Sulu\Bundle\ContactBundle\Contact\CustomerManager" public="true">
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <argument type="service" id="sulu_contact.util.id_converter"/>
            <argument type="service" id="sulu_contact.util.index_comparator"/>
            <argument type="string">%sulu.model.contact.class%</argument>
            <argument type="string">%sulu.model.account.class%</argument>
        </service>
        <service id="sulu_contact.twig.cache" class="Doctrine\Common\Cache\ArrayCache"/>
        <service id="sulu_contact.twig" class="Sulu\Bundle\ContactBundle\Twig\ContactTwigExtension">
            <argument type="service" id="sulu_contact.twig.cache"/>
            <argument type="service" id="sulu.repository.contact"/>

            <tag name="twig.extension"/>
        </service>

        <service id="sulu_contact.account_factory" class="Sulu\Bundle\ContactBundle\Contact\AccountFactory" public="true">
            <argument type="string">%sulu.model.account.class%</argument>
        </service>

        <service id="sulu_contact.smart_content.data_provider.contact" class="Sulu\Component\Contact\SmartContent\ContactDataProvider">
            <argument type="service" id="sulu_contact.contact_manager"/>
            <argument type="service" id="jms_serializer"/>
            <argument type="service" id="sulu_contact.reference_store.contact"/>

            <tag name="sulu.smart_content.data_provider" alias="contacts"/>
        </service>
        <service id="sulu_contact.smart_content.data_provider.account" class="Sulu\Component\Contact\SmartContent\AccountDataProvider">
            <argument type="service" id="sulu_contact.account_manager"/>
            <argument type="service" id="jms_serializer"/>
            <argument type="service" id="sulu_contact.reference_store.account"/>

            <tag name="sulu.smart_content.data_provider" alias="accounts"/>
        </service>

        <service id="sulu_contact.util.index_comparator" class="Sulu\Bundle\ContactBundle\Util\IndexComparator" public="true"/>
        <service id="sulu_contact.util.id_converter" class="Sulu\Bundle\ContactBundle\Util\CustomerIdConverter" public="false"/>

        <service id="sulu_contact.js_config" class="Sulu\Bundle\ContactBundle\Admin\JsConfigAvatarCollection">
            <argument type="service" id="sulu_media.system_collections.manager"/>

            <tag name="sulu.js_config"/>
        </service>

        <service id="sulu_contact.reference_store.contact"
                 class="Sulu\Bundle\WebsiteBundle\ReferenceStore\ReferenceStore">
            <tag name="sulu_website.reference_store" alias="contact"/>
        </service>

        <service id="sulu_contact.reference_store.account"
                 class="Sulu\Bundle\WebsiteBundle\ReferenceStore\ReferenceStore">
            <tag name="sulu_website.reference_store" alias="account"/>
        </service>
        <service id="sulu_contact.doctrine.invalidation_listener" class="Sulu\Bundle\ContactBundle\EventListener\CacheInvalidationListener">
            <argument type="service" id="sulu_http_cache.cache_manager" on-invalid="null" />

            <tag name="doctrine.event_listener" event="postPersist"/>
            <tag name="doctrine.event_listener" event="postUpdate"/>
            <tag name="doctrine.event_listener" event="preRemove"/>
        </service>
    </services>
</container>
