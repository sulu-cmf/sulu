<?php

/*
 * This file is part of Sulu.
 *
 * (c) MASSIVE ART WebServices GmbH
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace Sulu\Bundle\ContentBundle\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

class Configuration implements ConfigurationInterface
{
    /**
     * {@inheritdoc}
     */
    public function getConfigTreeBuilder()
    {
        $treeBuilder = new TreeBuilder();
        $rootNode = $treeBuilder->root('sulu_content');

        // add config preview interval
        $builder = $rootNode->addDefaultsIfNotSet()->children();

        $this->configurePreview($builder);
        $this->configureSearch($builder);
        $this->configureStructure($builder);

            // should be in document manager
        $builder
            ->arrayNode('node_names')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('base')
                        ->defaultValue('cmf')
                    ->end()
                    ->scalarNode('content')
                        ->defaultValue('contents')
                    ->end()
                    ->scalarNode('route')
                        ->defaultValue('routes')
                    ->end()
                    ->scalarNode('snippet')
                        ->defaultValue('snippets')
                    ->end()
                ->end()
            ->end();

// this is legacy.
//                ->scalarNode('internal_prefix')
//                    ->defaultValue('')
//                ->end()
//                ->arrayNode('language')
//                    ->addDefaultsIfNotSet()
//                    ->children()
//                        ->scalarNode('namespace')
//                            ->defaultValue('i18n')
//                        ->end()
//                        ->scalarNode('default')
//                            ->defaultValue('en')
//                        ->end()
//                    ->end()
//                ->end()

        return $treeBuilder;
    }

    private function configurePreview(NodeBuilder $builder)
    {
        $builder->arrayNode('preview')
            ->addDefaultsIfNotSet()
            ->children()
                ->scalarNode('error_template')
                    ->example('ClientWebsiteBundle:Preview:error.html.twig')
                ->end()
                ->scalarNode('mode')
                    ->defaultValue('auto')
                    ->validate()
                        ->ifNotInArray(['auto', 'on_request', 'off'])
                        ->thenInvalid('Invalid preview mode "%s" use one of [auto, on_request, off]')
                    ->end()
                ->end()
                ->scalarNode('delay')
                    ->defaultValue(200)
                    ->info('Used for the delayed send of changes')
                ->end()
                ->booleanNode('websocket')->defaultFalse()->end()
            ->end()
        ->end()
    }

    private function configureBuilder(NodeBuilder $builder)
    {
        $builder->arrayNode('search')
            ->addDefaultsIfNotSet()
            ->children()
                ->arrayNode('mapping')
                    ->useAttributeAsKey('structure_type')
                    ->prototype('array')
                        ->children()
                            ->scalarNode('index')->info('Name of index to use')->isRequired()->end()
                        ->end()
                    ->end()
                ->end()
            ->end()
        ->end()
    }

    private function configureStructure(NodeBuilder $builder)
    {
        $builder->arrayNode('structure')
            ->addDefaultsIfNotSet()
            ->children()
                ->arrayNode('default_type')
                    ->useAttributeAsKey('name')
                    ->prototype('scalar')
                    ->end()
                ->end()
                ->arrayNode('paths')
                    ->isRequired()
                    ->prototype('array')
                        ->children()
                            ->scalarNode('path')
                                ->example('%kernel.root_dir%/Resources/templates')
                            ->end()
                            ->scalarNode('type')
                                ->defaultValue('page')
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('type_map')
                    ->isRequired()
                    ->useAttributeAsKey('name')
                    ->prototype('scalar')
                    ->end()
                ->end()
            ->end();
    }

    private function configureContentTypes(NodeBuilder $builder)
    {
        $builder->arrayNode('types')
            ->addDefaultsIfNotSet()
            ->children()
            ->arrayNode('smart_content')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('template')
                        ->defaultValue('SuluContentBundle:Template:content-types/smart_content.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('internal_links')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('template')
                        ->defaultValue('SuluContentBundle:Template:content-types/internal_links.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('single_internal_link')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('template')
                        ->defaultValue('SuluContentBundle:Template:content-types/single_internal_link.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('phone')
                ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('template')
                            ->defaultValue('SuluContentBundle:Template:content-types/phone.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('password')
                ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('template')
                            ->defaultValue('SuluContentBundle:Template:content-types/password.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('url')
                ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('template')
                            ->defaultValue('SuluContentBundle:Template:content-types/url.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('email')
                ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('template')
                            ->defaultValue('SuluContentBundle:Template:content-types/email.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('date')
                ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('template')
                            ->defaultValue('SuluContentBundle:Template:content-types/date.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('time')
                ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('template')
                            ->defaultValue('SuluContentBundle:Template:content-types/time.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('color')
                ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('template')
                            ->defaultValue('SuluContentBundle:Template:content-types/color.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('checkbox')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('template')
                        ->defaultValue('SuluContentBundle:Template:content-types/checkbox.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('multiple_select')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('template')
                        ->defaultValue('SuluContentBundle:Template:content-types/multiple_select.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('single_select')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('template')
                    ->defaultValue('SuluContentBundle:Template:content-types/single_select.html.twig')
                ->end()
                ->end()
            ->end()
            ->arrayNode('text_line')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('template')
                        ->defaultValue('SuluContentBundle:Template:content-types/text_line.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('text_area')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('template')
                        ->defaultValue('SuluContentBundle:Template:content-types/text_area.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('text_editor')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('template')
                        ->defaultValue('SuluContentBundle:Template:content-types/text_editor.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('resource_locator')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('template')
                        ->defaultValue('SuluContentBundle:Template:content-types/resource_locator.html.twig')
                    ->end()
                ->end()
            ->end()
            ->arrayNode('block')
                ->addDefaultsIfNotSet()
                ->children()
                    ->scalarNode('template')
                        ->defaultValue('SuluContentBundle:Template:content-types/block.html.twig')
                    ->end()
                ->end()
            ->end()
        ->end()
    }
}
