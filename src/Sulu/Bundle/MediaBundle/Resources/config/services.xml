<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="sulu_media.admin.class">Sulu\Bundle\MediaBundle\Admin\MediaAdmin</parameter>
        <parameter key="sulu_media.media_manager.class">Sulu\Bundle\MediaBundle\Media\Manager\MediaManager</parameter>
        <parameter key="sulu_media.admin.content_navigation_provider.class">Sulu\Bundle\MediaBundle\Admin\MediaContentNavigationProvider</parameter>
        <parameter key="sulu_media.media_repository.class">Sulu\Bundle\MediaBundle\Entity\MediaRepository</parameter>
        <parameter key="sulu_media.collection_repository.class">Sulu\Bundle\MediaBundle\Entity\CollectionRepository</parameter>
        <parameter key="sulu_media.storage.class">Sulu\Bundle\MediaBundle\Media\Storage\LocalStorage</parameter>
        <parameter key="sulu_media.file_validator.class">Sulu\Bundle\MediaBundle\Media\FileValidator\FileValidator</parameter>
        <parameter key="sulu_media.format_manager.class">Sulu\Bundle\MediaBundle\Media\FormatManager\FormatManager</parameter>
        <parameter key="sulu_media.format_cache.class">Sulu\Bundle\MediaBundle\Media\FormatCache\LocalFormatCache</parameter>
        <parameter key="sulu_media.image.converter.class">Sulu\Bundle\MediaBundle\Media\ImageConverter\ImagineImageConverter</parameter>
        <parameter key="sulu_media.image.command_manager.class">Sulu\Bundle\MediaBundle\Media\ImageConverter\Command\Manager\CommandManager</parameter>
        <parameter key="sulu_media.image.command.resize.class">Sulu\Bundle\MediaBundle\Media\ImageConverter\Command\ResizeCommand</parameter>
        <parameter key="sulu_media.image.command.scale.class">Sulu\Bundle\MediaBundle\Media\ImageConverter\Command\ScaleCommand</parameter>
        <parameter key="sulu_media.image.command.crop.class">Sulu\Bundle\MediaBundle\Media\ImageConverter\Command\CropCommand</parameter>
        <parameter key="sulu_media.media_selection.class">Sulu\Bundle\MediaBundle\Content\Types\MediaSelectionContentType</parameter>
        <parameter key="sulu_media.media_selection.template">SuluMediaBundle:Template:content-types/media-selection.html.twig</parameter>
        <parameter key="sulu_media.collection_manager.class">Sulu\Bundle\MediaBundle\Collection\Manager\CollectionManager</parameter>
        <parameter key="sulu_media.type_manager.class">Sulu\Bundle\MediaBundle\Media\TypeManager\TypeManager</parameter>
        <parameter key="sulu_media.collection_entity">SuluMediaBundle:Collection</parameter>
        <parameter key="sulu_category.entity.media">SuluMediaBundle:Media</parameter>
        <parameter key="sulu_media.entity.file_version_meta">SuluMediaBundle:FileVersionMeta</parameter>
        <parameter key="sulu_media.twig_extension.disposition_type.class">Sulu\Bundle\MediaBundle\Twig\DispositionTypeTwigExtension</parameter>
        <parameter key="sulu_media.twig_extension.media.class">Sulu\Bundle\MediaBundle\Twig\MediaTwigExtension</parameter>
        <parameter key="tmp">Sulu\Bundle\MediaBundle\Twig\MediaTwigExtension</parameter>
        <parameter key="sulu_media.video_thumbnail_generator.class">Sulu\Bundle\MediaBundle\Media\Video\VideoThumbnailService</parameter>
    </parameters>

    <services>
        <service id="sulu_media.admin" class="%sulu_media.admin.class%">
            <tag name="sulu.admin"/>
            <tag name="sulu.context" context="admin"/>
            <argument type="service" id="sulu_security.security_checker"/>
            <argument>%sulu_admin.name%</argument>
        </service>
        <service id="sulu_media.admin.content_navigation_provider" class="%sulu_media.admin.content_navigation_provider.class%">
            <argument type="service" id="sulu_security.security_checker"/>
            <tag name="sulu_admin.content_navigation" alias="media"/>
            <tag name="sulu.context" context="admin"/>
        </service>
        <service id="sulu_media.media_repository"
                 class="%sulu_media.media_repository.class%"
                 factory-service="doctrine.orm.entity_manager"
                 factory-method="getRepository">
            <argument>%sulu_category.entity.media%</argument>
        </service>
        <service id="sulu_media.collection_repository"
                 class="%sulu_media.collection_repository.class%"
                 factory-service="doctrine.orm.entity_manager"
                 factory-method="getRepository">
            <argument>%sulu_media.collection_entity%</argument>
        </service>
        <service id="sulu_media.file_version_meta_repository"
                 class="Sulu\Bundle\MediaBundle\Entity\FileVersionMetaRepository"
                 factory-service="doctrine.orm.entity_manager"
                 factory-method="getRepository">
            <argument>%sulu_media.entity.file_version_meta%</argument>
        </service>
        <service id="sulu_media.storage" class="%sulu_media.storage.class%">
            <argument>%sulu_media.media.storage.local.path%</argument>
            <argument>%sulu_media.media.storage.local.segments%</argument>
            <argument type="service" id="logger"/>
        </service>
        <service id="sulu_media.file_validator" class="%sulu_media.file_validator.class%" />
        <service id="sulu_media.format_cache" class="%sulu_media.format_cache.class%">
            <argument type="service" id="filesystem"/>
            <argument>%sulu_media.format_cache.path%</argument>
            <argument>%sulu_media.format_cache.media_proxy_path%</argument>
            <argument>%sulu_media.format_cache.segments%</argument>
            <argument>%sulu_media.image.formats%</argument>
        </service>
        <service id="sulu_media.image.converter" class="%sulu_media.image.converter.class%">
            <argument type="service" id="sulu_media.image.command_manager" />
        </service>

        <service id="sulu_media.image.command_manager" class="%sulu_media.image.command_manager.class%" />

        <service id="sulu_media.image.command.resize" class="%sulu_media.image.command.resize.class%">
            <tag name="sulu_media.image.command" alias="resize" />
        </service>
        <service id="sulu_media.image.command.scale" class="%sulu_media.image.command.scale.class%">
            <tag name="sulu_media.image.command" alias="scale" />
        </service>
        <service id="sulu_media.image.command.crop" class="%sulu_media.image.command.crop.class%">
            <tag name="sulu_media.image.command" alias="crop" />
        </service>

        <service id="sulu_media.media_manager" class="%sulu_media.media_manager.class%">
            <argument type="service" id="sulu_media.media_repository" />
            <argument type="service" id="sulu_media.collection_repository" />
            <argument type="service" id="sulu.repository.user" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="sulu_media.storage" />
            <argument type="service" id="sulu_media.file_validator" />
            <argument type="service" id="sulu_media.format_manager" />
            <argument type="service" id="sulu_tag.tag_manager" />
            <argument type="service" id="sulu_media.type_manager" />
            <argument type="service" id="security.token_storage" on-invalid="null" />
            <argument type="service" id="sulu_security.security_checker" on-invalid="null" />
            <argument type="service" id="dubture_ffmpeg.ffprobe" />
            <argument>%sulu_security.permissions%</argument>
            <argument type="string">%sulu_media.media_manager.media_download_path%</argument>
            <argument>%sulu_media.media.max_file_size%</argument>
        </service>

        <service id="sulu_media.type_manager" class="%sulu_media.type_manager.class%">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument>%sulu_media.media.types%</argument>
            <argument>%sulu_media.media.blocked_file_types%</argument>
        </service>

        <service id="sulu_media.format_manager" class="%sulu_media.format_manager.class%">
            <argument type="service" id="sulu_media.media_repository" />
            <argument type="service" id="sulu_media.storage" />
            <argument type="service" id="sulu_media.format_cache" />
            <argument type="service" id="sulu_media.image.converter" />
            <argument type="service" id="sulu_media.video_thumbnail_generator"/>
            <argument type="string">%sulu_media.ghost_script.path%</argument>
            <argument type="string">%sulu_media.format_cache.save_image%</argument>
            <argument type="string">%sulu_media.format_manager.mime_types%</argument>
            <argument type="string">%sulu_media.format_manager.response_headers%</argument>
            <argument>%sulu_media.image.formats%</argument>
        </service>

        <service id="sulu_media.type.media_selection" class="%sulu_media.media_selection.class%">
            <argument type="service" id="sulu_media.media_manager"/>
            <argument type="string">%sulu_media.media_selection.template%</argument>
            <tag name="sulu.content.type" alias="media_selection"/>
            <tag name="sulu.content.export" format="1.2.xliff" translate="false" />
        </service>

        <service id="sulu_media.collection_manager" class="%sulu_media.collection_manager.class%">
            <argument type="service" id="sulu_media.collection_repository" />
            <argument type="service" id="sulu_media.media_repository" />
            <argument type="service" id="sulu_media.format_manager" />
            <argument type="service" id="sulu.repository.user" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="security.token_storage" on-invalid="null"/>
            <argument type="string">%sulu_media.collection.previews.format%</argument>
            <argument>%sulu_security.permissions%</argument>
        </service>

        <service id="sulu_media.twig_extension.disposition_type" class="%sulu_media.twig_extension.disposition_type.class%">
            <argument>%sulu_media.disposition_type.default%</argument>
            <argument>%sulu_media.disposition_type.mime_types_inline%</argument>
            <argument>%sulu_media.disposition_type.mime_types_attachment%</argument>

            <tag name="twig.extension"/>
        </service>

        <service id="sulu_media.twig_extension.media" class="%sulu_media.twig_extension.media.class%">
            <argument type="service" id="sulu_media.media_manager"/>

            <tag name="twig.extension"/>
        </service>

        <service id="sulu_media.video_thumbnail_generator" class="%sulu_media.video_thumbnail_generator.class%">
            <argument type="service" id="dubture_ffmpeg.ffmpeg"/>
        </service>

        <service id="sulu_media.permission_listener" class="Sulu\Bundle\MediaBundle\Search\EventListener\PermissionListener">
            <argument type="service" id="sulu_media.file_version_meta_repository"/>
            <argument type="service" id="massive_search.search_manager"/>
            <tag name="kernel.event_listener" event="sulu_security.permission_update" method="onPermissionUpdate"/>
        </service>

        <service id="sulu_media.js_config" class="Sulu\Bundle\AdminBundle\Admin\JsConfig">
            <argument>sulu-media</argument>
            <argument type="collection">
                <argument key="permissions" type="expression">
                    service('sulu_security.access_control_manager').getUserPermissions(
                        service('sulu_media.security_context'),
                        service('security.token_storage').getToken().getUser()
                    )
                </argument>
                <argument key="maxFilesize" type="string">%sulu_media.upload.max_filesize%</argument>
            </argument>

            <tag name="sulu.js_config"/>
            <tag name="sulu.context" context="admin"/>
        </service>

        <service id="sulu_media.security_context" class="Sulu\Component\Security\Authorization\SecurityCondition">
            <argument>sulu.media.collections</argument>
        </service>

        <service id="sulu_media.system_collections.cache" class="Symfony\Component\Config\ConfigCache">
            <argument>%sulu.cache_dir%/system_collection.cache</argument>
            <argument>%kernel.debug%</argument>
        </service>

        <service id="sulu_media.system_collections.manager" class="Sulu\Component\Media\SystemCollections\SystemCollectionManager">
            <argument>%sulu_media.system_collections%</argument>
            <argument type="service" id="sulu_media.collection_manager"/>
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="security.token_storage" on-invalid="null"/>
            <argument type="service" id="sulu_media.system_collections.cache"/>
            <argument>%kernel.default_locale%</argument>
        </service>

        <service id="sulu_media.system_collections.warm_up" class="Sulu\Component\Media\SystemCollections\SystemCollectionBuilder">
            <tag name="massive_build.builder" />
        </service>
    </services>
</container>
